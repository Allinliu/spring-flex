<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:local="*"
			   applicationComplete="applicationCompleteHandler()" >

	<fx:Script>
		<![CDATA[

			import mx.messaging.ChannelSet;
			import mx.messaging.channels.AMFChannel;
			import mx.controls.Alert;
			import mx.rpc.AsyncToken;
			import mx.rpc.AsyncResponder;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			private var user:Object = null;
			
			private function applicationCompleteHandler():void
			{
				securityHelper.getAuthentication();
			}
			
			private function userHandler(event:ResultEvent):void 
			{
				user = event.result;
				if (user != null) {
					chat.consumer.subscribe();
					userId.text = user.name;
					userId.editable = false;
					password.editable = false;
				}
			}

			private function faultHandler(event:FaultEvent):void
			{
				Alert.show(event.fault.faultString, "Error accessing RemoteObject");
			}
			
			private function login():void
			{
				var token:AsyncToken = securityHelper.channelSet.login(userId.text, password.text);
	  			token.addResponder(
	  				new AsyncResponder(
	  					function(event:ResultEvent, token:Object = null):void{
	  						user = event.result;
	  						userId.editable = false;
	  						password.editable = false;
							chat.consumer.subscribe();
	  					},
	  					function(event:FaultEvent, token:Object = null):void{
	  						Alert.show(event.fault.faultString, "Login Failed");
	  					}
	  				)
	  			);
			}

			private function logout():void
			{
				chat.consumer.unsubscribe();
				securityHelper.channelSet.logout();
				user = null;
				userId.text = "";
				userId.editable = true;
				password.text = "";
				password.editable = true;
				grid.dataProvider.removeAll();
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- "productService" is defined in Spring's configuration file WEB-INF/config/web-application-config.xml
		and provides remote access to the org.springframework.flex.samples.product.ProductDAO class --> 
		<s:RemoteObject id="productService" destination="securedProductService" fault="faultHandler(event)"/>
		<s:RemoteObject id="securityHelper" destination="securityHelper" fault="faultHandler(event)">
			<s:method name="getAuthentication" result="userHandler(event)"/>
		</s:RemoteObject>
	</fx:Declarations>
	
	<s:layout>
		<s:VerticalLayout paddingTop="12" paddingBottom="12" paddingLeft="12" paddingRight="12"/>
	</s:layout>
	
	<mx:Form>
		<mx:FormItem label="User Id">
			<s:TextInput id="userId"/>
		</mx:FormItem>
		<mx:FormItem label="Password">
			<s:TextInput id="password" displayAsPassword="true"/>
		</mx:FormItem>
		<mx:FormItem direction="horizontal">
			<s:Button label="Login" click="login()"/>
			<s:Button label="Logout" click="logout()"/>
		</mx:FormItem>
	</mx:Form>
	
	<s:Panel top="12" bottom="12" left="12" right="12">
		
		<mx:Accordion width="100%" visible="{user != null}">
		
			<mx:Canvas label="Products" width="100%">
				<mx:Panel width="100%">
					<mx:DataGrid id="grid" dataProvider="{productService.findAll.lastResult}" width="100%" height="100%">
						<mx:columns>
							<mx:DataGridColumn dataField="productId" headerText="Product ID" visible="{user != null ? user.authorities.indexOf('ROLE_ADMIN') >= 0 : false}"/>
							<mx:DataGridColumn dataField="name" headerText="Name" />
						    <mx:DataGridColumn dataField="category" headerText="Category" />
						    <mx:DataGridColumn dataField="description" headerText="Description" />
						    <mx:DataGridColumn dataField="image" headerText="Image" />
						    <mx:DataGridColumn dataField="price" headerText="Price" />
						    <mx:DataGridColumn dataField="qty" headerText="Qty" />
						</mx:columns>
					</mx:DataGrid>
					<mx:Button label="Get Data" click="productService.findAll()"/>
				</mx:Panel>
			</mx:Canvas>
			
			<local:Chat id="chat" username="{user.name}"/>
			
		</mx:Accordion>
			
	</s:Panel>
</s:Application>
