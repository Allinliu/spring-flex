<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

	<!-- Maps request paths at /* to the BlazeDS MessageBroker -->
	<bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
	    <property name="mappings">
	        <value>
	            /*=mySpringManagedMessageBroker
	        </value>
	    </property>
	</bean>
	
	<!-- Dispatches requests mapped to a MessageBroker -->
	<bean class="org.springframework.flex.messaging.servlet.MessageBrokerHandlerAdapter"/>
	
	<!-- Bootstraps and exposes the BlazeDS MessageBroker -->
	<bean id="mySpringManagedMessageBroker" class="org.springframework.flex.messaging.MessageBrokerFactoryBean" />
	
	<!-- Installs Spring Security support -->
	<bean class="org.springframework.flex.messaging.security.SpringSecurityLoginCommand">
		<constructor-arg ref="mySpringManagedMessageBroker"/>
		<constructor-arg ref="_authenticationManager"/>
	</bean>	
	
	<bean id="securityPostProcessor" class="org.springframework.flex.messaging.security.MessageBrokerSecurityPostProcessor">
		<constructor-arg>
			<list>
				<idref bean="exceptionTranslator"/>
				<idref bean="endpointInterceptor"/>
			</list>
		</constructor-arg>
	</bean>
	
	<bean id="endpointInterceptor" class="org.springframework.flex.messaging.security.EndpointServiceMessagePointcutAdvisor">
		<constructor-arg>
			<bean class="org.springframework.flex.messaging.security.EndpointInterceptor">
				<property name="accessDecisionManager" ref="_accessManager"/>
				<property name="authenticationManager" ref="_authenticationManager"/>
				<property name="objectDefinitionSource">
					<bean class="org.springframework.flex.messaging.security.EndpointDefinitionSource">
						<constructor-arg>
							<bean class="org.springframework.security.util.AntUrlPathMatcher"/>
						</constructor-arg>
						<constructor-arg>
							<map>
								<entry> 
									<key>
										<bean class="org.springframework.security.intercept.web.RequestKey">
											<constructor-arg value="**/messagebroker/protected/**"/>
										</bean>
									</key>
									<bean class="org.springframework.security.ConfigAttributeDefinition">
										<constructor-arg value="ROLE_USER"/>
									</bean>							
								</entry>
								<entry> 
									<key>
										<bean class="org.springframework.security.intercept.web.RequestKey">
											<constructor-arg value="**/messagebroker/**"/>
										</bean>
									</key>
									<bean class="org.springframework.security.ConfigAttributeDefinition">
										<constructor-arg value="ROLE_ANONYMOUS, ROLE_USER"/>
									</bean>							
								</entry>
							</map>
						</constructor-arg>
					</bean>
				</property>
			</bean>
		</constructor-arg>
	</bean>
	
	<bean id="exceptionTranslator" class="org.springframework.flex.messaging.security.EndpointServiceMessagePointcutAdvisor">
		<constructor-arg>
			<bean class="org.springframework.flex.messaging.security.SecurityExceptionTranslationAdvice"/>
		</constructor-arg>
	</bean>
	
	<bean id="pingService" class="org.springframework.flex.integration.service.PingService" />
	
	<bean id="pingRemote" class="org.springframework.flex.messaging.remoting.FlexRemotingServiceExporter">
		<property name="messageBroker" ref="mySpringManagedMessageBroker"/>
		<property name="service" ref="pingService"/>
	</bean>
    
</beans>